# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import calculator_pb2 as proto_dot_calculator__pb2


class CalculatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Sum = channel.unary_unary(
                '/Calculator.Calculator/Sum',
                request_serializer=proto_dot_calculator__pb2.SumRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.SumResponse.FromString,
                )
        self.Average = channel.unary_unary(
                '/Calculator.Calculator/Average',
                request_serializer=proto_dot_calculator__pb2.ComputeAverageRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.ComputeAverageResponse.FromString,
                )
        self.Factorial = channel.unary_unary(
                '/Calculator.Calculator/Factorial',
                request_serializer=proto_dot_calculator__pb2.FactorialRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.FactorialResponse.FromString,
                )
        self.SquareRoot = channel.unary_unary(
                '/Calculator.Calculator/SquareRoot',
                request_serializer=proto_dot_calculator__pb2.SquareRootRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.SquareRootResponse.FromString,
                )
        self.CubeRoot = channel.unary_unary(
                '/Calculator.Calculator/CubeRoot',
                request_serializer=proto_dot_calculator__pb2.CubeRootRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.CubeRootResponse.FromString,
                )
        self.Max = channel.unary_unary(
                '/Calculator.Calculator/Max',
                request_serializer=proto_dot_calculator__pb2.MaxRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.MaxResponse.FromString,
                )
        self.Min = channel.unary_unary(
                '/Calculator.Calculator/Min',
                request_serializer=proto_dot_calculator__pb2.MinRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.MinResponse.FromString,
                )
        self.Mean = channel.unary_unary(
                '/Calculator.Calculator/Mean',
                request_serializer=proto_dot_calculator__pb2.MeanRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.MeanResponse.FromString,
                )
        self.Median = channel.unary_unary(
                '/Calculator.Calculator/Median',
                request_serializer=proto_dot_calculator__pb2.MedianRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.MedianResponse.FromString,
                )
        self.Sin = channel.unary_unary(
                '/Calculator.Calculator/Sin',
                request_serializer=proto_dot_calculator__pb2.SinRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.SinResponse.FromString,
                )
        self.Cos = channel.unary_unary(
                '/Calculator.Calculator/Cos',
                request_serializer=proto_dot_calculator__pb2.CosRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.CosResponse.FromString,
                )
        self.Tan = channel.unary_unary(
                '/Calculator.Calculator/Tan',
                request_serializer=proto_dot_calculator__pb2.TanRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.TanResponse.FromString,
                )
        self.MatrixAddition = channel.unary_unary(
                '/Calculator.Calculator/MatrixAddition',
                request_serializer=proto_dot_calculator__pb2.MatrixAdditionRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.MatrixAdditionResponse.FromString,
                )
        self.MatrixSubtraction = channel.unary_unary(
                '/Calculator.Calculator/MatrixSubtraction',
                request_serializer=proto_dot_calculator__pb2.MatrixSubtractionRequest.SerializeToString,
                response_deserializer=proto_dot_calculator__pb2.MatrixSubtractionResponse.FromString,
                )


class CalculatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Sum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Average(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Factorial(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SquareRoot(self, request, context):
        """Advanced Arithmetic Operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CubeRoot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Max(self, request, context):
        """Statistical Functions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Min(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Mean(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Median(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sin(self, request, context):
        """Trigonometric Functions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Cos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Tan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MatrixAddition(self, request, context):
        """Matrix Operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MatrixSubtraction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CalculatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Sum': grpc.unary_unary_rpc_method_handler(
                    servicer.Sum,
                    request_deserializer=proto_dot_calculator__pb2.SumRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.SumResponse.SerializeToString,
            ),
            'Average': grpc.unary_unary_rpc_method_handler(
                    servicer.Average,
                    request_deserializer=proto_dot_calculator__pb2.ComputeAverageRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.ComputeAverageResponse.SerializeToString,
            ),
            'Factorial': grpc.unary_unary_rpc_method_handler(
                    servicer.Factorial,
                    request_deserializer=proto_dot_calculator__pb2.FactorialRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.FactorialResponse.SerializeToString,
            ),
            'SquareRoot': grpc.unary_unary_rpc_method_handler(
                    servicer.SquareRoot,
                    request_deserializer=proto_dot_calculator__pb2.SquareRootRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.SquareRootResponse.SerializeToString,
            ),
            'CubeRoot': grpc.unary_unary_rpc_method_handler(
                    servicer.CubeRoot,
                    request_deserializer=proto_dot_calculator__pb2.CubeRootRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.CubeRootResponse.SerializeToString,
            ),
            'Max': grpc.unary_unary_rpc_method_handler(
                    servicer.Max,
                    request_deserializer=proto_dot_calculator__pb2.MaxRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.MaxResponse.SerializeToString,
            ),
            'Min': grpc.unary_unary_rpc_method_handler(
                    servicer.Min,
                    request_deserializer=proto_dot_calculator__pb2.MinRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.MinResponse.SerializeToString,
            ),
            'Mean': grpc.unary_unary_rpc_method_handler(
                    servicer.Mean,
                    request_deserializer=proto_dot_calculator__pb2.MeanRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.MeanResponse.SerializeToString,
            ),
            'Median': grpc.unary_unary_rpc_method_handler(
                    servicer.Median,
                    request_deserializer=proto_dot_calculator__pb2.MedianRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.MedianResponse.SerializeToString,
            ),
            'Sin': grpc.unary_unary_rpc_method_handler(
                    servicer.Sin,
                    request_deserializer=proto_dot_calculator__pb2.SinRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.SinResponse.SerializeToString,
            ),
            'Cos': grpc.unary_unary_rpc_method_handler(
                    servicer.Cos,
                    request_deserializer=proto_dot_calculator__pb2.CosRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.CosResponse.SerializeToString,
            ),
            'Tan': grpc.unary_unary_rpc_method_handler(
                    servicer.Tan,
                    request_deserializer=proto_dot_calculator__pb2.TanRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.TanResponse.SerializeToString,
            ),
            'MatrixAddition': grpc.unary_unary_rpc_method_handler(
                    servicer.MatrixAddition,
                    request_deserializer=proto_dot_calculator__pb2.MatrixAdditionRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.MatrixAdditionResponse.SerializeToString,
            ),
            'MatrixSubtraction': grpc.unary_unary_rpc_method_handler(
                    servicer.MatrixSubtraction,
                    request_deserializer=proto_dot_calculator__pb2.MatrixSubtractionRequest.FromString,
                    response_serializer=proto_dot_calculator__pb2.MatrixSubtractionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Calculator.Calculator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Calculator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Sum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/Sum',
            proto_dot_calculator__pb2.SumRequest.SerializeToString,
            proto_dot_calculator__pb2.SumResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Average(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/Average',
            proto_dot_calculator__pb2.ComputeAverageRequest.SerializeToString,
            proto_dot_calculator__pb2.ComputeAverageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Factorial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/Factorial',
            proto_dot_calculator__pb2.FactorialRequest.SerializeToString,
            proto_dot_calculator__pb2.FactorialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SquareRoot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/SquareRoot',
            proto_dot_calculator__pb2.SquareRootRequest.SerializeToString,
            proto_dot_calculator__pb2.SquareRootResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CubeRoot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/CubeRoot',
            proto_dot_calculator__pb2.CubeRootRequest.SerializeToString,
            proto_dot_calculator__pb2.CubeRootResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Max(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/Max',
            proto_dot_calculator__pb2.MaxRequest.SerializeToString,
            proto_dot_calculator__pb2.MaxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Min(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/Min',
            proto_dot_calculator__pb2.MinRequest.SerializeToString,
            proto_dot_calculator__pb2.MinResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Mean(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/Mean',
            proto_dot_calculator__pb2.MeanRequest.SerializeToString,
            proto_dot_calculator__pb2.MeanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Median(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/Median',
            proto_dot_calculator__pb2.MedianRequest.SerializeToString,
            proto_dot_calculator__pb2.MedianResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Sin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/Sin',
            proto_dot_calculator__pb2.SinRequest.SerializeToString,
            proto_dot_calculator__pb2.SinResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Cos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/Cos',
            proto_dot_calculator__pb2.CosRequest.SerializeToString,
            proto_dot_calculator__pb2.CosResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Tan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/Tan',
            proto_dot_calculator__pb2.TanRequest.SerializeToString,
            proto_dot_calculator__pb2.TanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MatrixAddition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/MatrixAddition',
            proto_dot_calculator__pb2.MatrixAdditionRequest.SerializeToString,
            proto_dot_calculator__pb2.MatrixAdditionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MatrixSubtraction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Calculator.Calculator/MatrixSubtraction',
            proto_dot_calculator__pb2.MatrixSubtractionRequest.SerializeToString,
            proto_dot_calculator__pb2.MatrixSubtractionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
